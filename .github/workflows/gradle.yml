# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: SpringBoot & Gradle CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        # 사용하는 자바 버전 17
        java-version: '17'
        distribution: 'temurin'
    
    # application.yml은 외부에 노출되면 안 되기 때문에  Actions가 빌드될 때 마다 해당 Repository의 Secret 설정을 이용해서 설정 파일 생성
  #  - run: touch./src/main/resources/application.yml
  #  - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
  #  - run: cat ./src/main/resources/application.yml
    
    # gradlew에 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    # gradlew 빌드
    - name: Build with Gradle
      run: ./gradlew clean build --exclude-task test
      
    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy
    
    # Jar file Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
      
    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./ConcertCalendar-build.zip ./deploy
    
    # S3 Bucket으로 Copy
    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \ 
        ./ConcertCalendar-build.zip s3://ConcertCalendar-build/



