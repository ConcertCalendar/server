# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: ConcertCalendar(SpringBoot & Gradle) CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          # 사용하는 자바 버전 17
          java-version: '17'
          distribution: 'temurin'
  
      - run: touch ./src/main/resources/application-secret.properties
      - run: echo "${{ secrets.APPLICATION_SECRET }}" > ./src/main/resources/application-secret.properties
      - run: cat ./src/main/resources/application-secret.properties
 
      # gradlew에 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      # gradlew 빌드
      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test


      # docker build & push
      - name: Docker build & push
        run: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker build -t ${{ secrets.DOCKER_REPO }}/concert_calendar .
            docker push ${{ secrets.DOCKER_REPO }}/concert_calendar
            
      # docker deploy
      - name: Docker Deploy executing remote ssh commands using ssh_key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          scripts: |
            cd app
            sudo docker rm - f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/concert_calendar
            docker-compose up
            docker image prune -f
